param WIDTH: i16 ;         
param HEIGHT: i16 ;              

const c2d = @import_module("<collectives_2d/params>");

const memcpy = @import_module( "<memcpy/get_params>", .{
    .width = WIDTH,
    .height = HEIGHT,
});

layout {

  @set_rectangle(WIDTH,HEIGHT);

  var py:i16 = 0;
  while(py < HEIGHT) : (py += 1){
    var px:i16 = 0;
    while(px < WIDTH) : (px += 1){
        const memcpy_params = memcpy.get_params(px);

        const c2d_params = c2d.get_params(px,py,.{
          .x_colors = .{
           @get_color(0),
           @get_color(1)
         },
         .x_entrypoints = .{
           @get_local_task_id(2),
           @get_local_task_id(3)
         },
         .y_colors = .{
           @get_color(4),
           @get_color(5)
         },
         .y_entrypoints = .{
           @get_local_task_id(6),
           @get_local_task_id(7)
         },
        });

        var params: comptime_struct = .{
            .memcpy_params = memcpy_params,
            .c2d_params = c2d_params,
        };

        @set_tile_code(px,py,"pe_program.csl",params);
    }
  }

  @export_name("datax", [*]f32, true);
  @export_name("datay", [*]f32, true);
  @export_name("result", [*]f32, true);
  @export_name("main", fn()void);
}